let todoArray=[{id:1,name:"Go to work",complete:!1,category:"Work"},{id:2,name:"Go to school",complete:!1,category:"School"},{id:3,name:"Go to the dentist",complete:!1,category:"Health"},{id:4,name:"Go to the gym",complete:!1,category:"Health"}],catArray=["Work","School","Health","Other"];function updateCategories(){return catArray}function renderTopInputSectionInDOM(){const e=document.querySelector(".add-items"),t=document.createElement("div");t.setAttribute("class","input-group-prepend form-control");const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("class","todo-list-input form-control"),o.setAttribute("placeholder","New Task"),o.setAttribute("id","new-task-input"),o.addEventListener("keyup",(function(e){"Enter"===e.code&&submitInput(e)}));const n=document.createElement("button");n.setAttribute("class","add btn btn-primary font-weight-bold todo-list-add-btn"),n.setAttribute("type","submit"),n.setAttribute("id","add-btn"),n.innerHTML="Add";const r=document.createElement("div"),d=document.createElement("button");d.setAttribute("class","btn btn-outline-secondary dropdown-toggle category-dropdown"),d.setAttribute("id","set-category-dropdown-btn"),d.setAttribute("type","button"),d.setAttribute("data-bs-toggle","dropdown"),d.setAttribute("aria-expanded","false"),d.innerHTML="Select Category";const a=document.createElement("ul");a.setAttribute("class","dropdown-menu dropdown-menu-end"),a.setAttribute("id","dropdown-category-unordered-list"),console.log(a),n.addEventListener("click",(e=>{submitInput(e)})),r.appendChild(d),r.appendChild(a),t.appendChild(o),t.appendChild(r),e.appendChild(t),e.appendChild(n),renderCategorySelection()}window.addEventListener("load",(()=>{renderTopInputSectionInDOM(),todoArray.map((e=>{formatExistingJSON(e)}))}));const renderCategorySelection=()=>{let e=document.getElementById("dropdown-category-unordered-list"),t=document.getElementById("set-category-dropdown-btn");e.innerHTML="",console.log(e),updateCategories().forEach((o=>{const n=document.createElement("li"),r=document.createElement("a");r.setAttribute("class","dropdown-item dropdown-categories"),r.setAttribute("href","#"),r.innerHTML=`${o}`,n.appendChild(r),e.appendChild(n),r.addEventListener("click",(()=>{t.innerHTML=`${o}`}))}))};function formatExistingJSON(e){renderTask({id:e.id,name:e.name,category:e.category,complete:!1})}const formatNewJSON=(e,t)=>{console.log("newly added task as a string before JSON format---\x3e",e);const o={id:todoArray.length+Math.floor(258*Math.random()),name:e,category:t,complete:!1};todoArray.push(o),console.log("array after new todo is pushed to array --\x3e",todoArray),renderTask(o)};function submitInput(e){console.log("event----\x3e",e),e.preventDefault();const t=document.querySelector(".todo-list-input"),o=t.value.trim(),n=document.querySelector(".category-dropdown").innerHTML;let r="Select Category"!==n;console.log("is valid category?",r),console.log("category text in submitInput-----\x3e",n),""!==o&&r?(formatNewJSON(o,n),renderCategorySelection(),t.value="",t.focus()):promptError()}function removeFromArray(e){console.log("remove from array---"),event.currentTarget.parentElement.parentElement.remove(e),todoArray.filter((t=>{if(t.id===e){let e=todoArray.indexOf(t);console.log("index of todo----\x3e",e),todoArray.splice(e,1)}})),console.log("todoArray--- .>",todoArray)}function removeTodoFromList(e){event.currentTarget.parentElement.parentElement.parentElement.remove(e)}function toggleComplete(e){const t=todoArray.find((t=>t.id==Number(e)));0==t.complete?t.complete=!0:1==t.complete&&(t.complete=!1,renderTask(e),removeTodoFromList(e)),findRemovedTask(e),console.log("todo array after toggle---\x3e",todoArray)}function renderTask(e){console.log("---renderTask----");const t=document.querySelector("#incomplete-ul"),o=document.querySelector("#complete-ul"),n=document.querySelector(`[data-key='${e.id}']`),r=document.createElement("li");r.setAttribute("data-key",e.id),r.innerHTML=`\n      <div class="form-check">\n      <label class="form-check-label">\n      <input id="${e.id}" onClick="toggleComplete(${e.id})" class="js-tick checkbox" type="checkbox"/>\n      ${e.name}\n      <p class="input-helper" id="incomplete-list">\n      </p>\n      </label>\n      </div>\n      <div class="editicons">\n      <i onclick="editTodo(${e.id})" class=" remove mdi mdi-close-circle-outline fas fa-edit customeditbutton">\n      </i>\n      <i onclick="removeFromArray(${e.id})" class="remove mdi mdi-close-circle-outline">\n      </i>\n      </div>\n    `,e.complete?o.append(n):!1===e.complete&&t.append(r),renderCategories()}function promptError(e){"Uncategorized"==e?window.alert("You cannot erase this category. You can either update the category name with the edit icon or individually edit todos with a new Category."):window.alert("A To-Do item cannot be blank and a category must be selected. Please try again.")}function findRemovedTask(e){todoArray.forEach((t=>{t.id==e&&renderTask(t)}))}function deleteAllCompletedTasks(){console.log("delete all completed---"),document.getElementById("complete-ul").innerHTML="",todoArray=todoArray.filter((e=>{if(!1===e.complete)return e})),renderCategories(),renderCategorySelection()}function editTodo(e){const t=todoArray.find((t=>t.id==Number(e))),o=JSON.stringify(t.name),n=event.currentTarget.parentElement.parentElement;n.classList.add("mobile-sizing");const r=n.getAttribute("data-key");event.currentTarget.parentElement.parentElement.innerHTML=`<input value=${o} id=${e}></input><button onclick= updateToDo(${e},${r}) class='mb-sm-btn btn btn-secondary btn-sm '>Update</button>`}function updateToDo(e,t){console.log("in update todo function");const o=todoArray.findIndex((e=>e.id===t));let n=document.getElementById(`${e}`).value;n?(formatNewJSON(n),todoArray.splice(o,1),removeEditInputField(e)):promptError(),console.log("updated array after edited todo is edited --\x3e",todoArray)}function removeEditInputField(e){document.getElementById(e).parentElement.remove()}const renderCategories=()=>{let e=updateCategories(),t=document.getElementById("modal-body");1==e.length&&"Uncategorized"==e[0]&&(e=[]);let o=document.getElementById("defaultDropdown");t.innerHTML="";o.innerHTML="<option value=All Categories> <p> All Categories </p> </option><hr>";let n=document.createElement("div");n.setAttribute("class","modal-new-categories-div");let r=document.createElement("button");if(r.innerText="+ New Category",r.setAttribute("class","btn-sm btn-primary"),r.addEventListener("click",addCategories),t.appendChild(n),n.appendChild(r),e.forEach((e=>{let n=document.createElement("li");n.classList.add("modal-displayed-categories");let r=document.createTextNode(e),d=document.createElement("div");d.classList.add("edit-icons-div");let a=document.createElement("p");a.classList.add("category-list-text-modal"),a.textContent=r.textContent,n.appendChild(a),n.appendChild(d),t.appendChild(n);let i=document.createElement("i");i.classList.add("remove","mdi","mdi-close-circle-outline","fas","fa-edit","customeditbutton","modal-edit-icon"),d.appendChild(i);let l=document.createElement("i");l.classList.add("remove","mdi","mdi-close-circle-outline","modal-remove-icon"),l.setAttribute("value",r),l.addEventListener("click",removeCategory),d.appendChild(l);let c=document.createElement("option");c.setAttribute("value",r.textContent),c.appendChild(r),o.appendChild(c)})),0===e.length){t.innerHTML="";let e=document.createElement("h5");e.innerText="All Categories have been set to Uncategorized";let o=document.createElement("h6");o.setAttribute("class","empty-modal-text"),o.innerText="Please add categories to improve our sorting feature.",e.setAttribute("class","empty-modal-text");let n=document.createElement("div");n.setAttribute("class","empty-modal"),n.appendChild(e),n.appendChild(o);let r=document.createElement("button");r.innerText="+ Add Category",r.setAttribute("class","btn-sm btn-primary"),r.addEventListener("click",addCategories),n.appendChild(r),t.appendChild(n)}document.getElementById("save-btn").addEventListener("click",(()=>{renderCategorySelection()}))};function filterByCategory(e){console.log("Selected Dropdown Item --\x3e",e.target.value);let t=e.target.value,o=document.getElementById("incomplete-ul");if("All"===t)o.innerHTML="",todoArray.map((e=>{formatExistingJSON(e)}));else{let e=todoArray.filter((e=>e.category===t));o.innerHTML="",e.forEach((e=>{renderTask(e)}))}}const removeCategory=e=>{let t=e.target.parentElement.parentElement.textContent;if(todoArray.forEach((e=>{e.category===t&&(e.category="Uncategorized")})),"Uncategorized"===t)promptError(t);else{let e=updateCategories(),o=e.indexOf(t);e.splice(o,1),document.getElementById("modal-body").innerHTML="",renderCategories()}},addCategories=e=>{console.log(e.target.parentElement);let t=e.target.parentElement,o=t,n=document.createElement("div"),r=document.createElement("input");r.setAttribute("id","new-cat-input"),r.setAttribute("type","text"),n.appendChild(r);let d=document.createElement("button");d.innerText="Create Category",d.setAttribute("class","input-field-btn btn btn-sm btn-outline-primary"),n.appendChild(d),n.setAttribute("class","even-with-btn"),t.innerHTML="",t.appendChild(n),r.addEventListener("change",(function(e){a(e)}));const a=e=>{let t=document.getElementById("new-cat-input").value;catArray.push(document.getElementById("new-cat-input").value),console.log(t),renderCategories()};let i=document.createElement("i");i.setAttribute("class",".remove mdi mdi-close-circle-outline modal-remove-icon"),i.addEventListener("click",removeCategory),o.appendChild(i)};let dropdownOptions=document.getElementById("defaultDropdown");dropdownOptions.addEventListener("change",filterByCategory);let editCatBtn=document.getElementById("edit-categories-btn");editCatBtn.addEventListener("click",renderCategories());let catDropdown=document.getElementById("defaultDropdown");catDropdown.addEventListener("click",renderCategories());
//# sourceMappingURL=index.55056a40.js.map
