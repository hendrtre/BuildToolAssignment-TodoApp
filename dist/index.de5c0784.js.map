{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["\r\n// Array of Todo Items\r\nlet todoArray = [\r\n    {\r\n      id: 1,\r\n      name: \"Go to work\",\r\n      complete: false,\r\n      category: \"Work\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Go to school\",\r\n      complete: false,\r\n      category: \"School\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Go to the dentist\",\r\n      complete: false,\r\n      category: \"Health\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Go to the gym\",\r\n        complete: false,\r\n        category: \"Health\",\r\n      },\r\n  ];\r\n  \r\n  let catArray = ['Work', 'School', 'Health', 'Other'];\r\n  \r\n  // contains a persistent array instead of the having to get category out of the todo items, allows for independent edits of categories. Otherwise to make new category need to make new todo item.\r\n  function updateCategories () {\r\n      return catArray;\r\n  }\r\n  \r\n  //adds input area and array items from array above on page load to the addTask\r\n  window.addEventListener(\"load\", () => {\r\n    renderTopInputSectionInDOM();\r\n    todoArray.map((task) => {\r\n      formatExistingJSON(task);\r\n    });\r\n  });\r\n  \r\n  // Create new task div function\r\n  function renderTopInputSectionInDOM() {\r\n    const topInputSectionDiv = document.querySelector(\".add-items\");\r\n    const inputGroup = document.createElement('div');\r\n    inputGroup.setAttribute('class', 'input-group-prepend form-control')\r\n  \r\n    // Create new task input\r\n    const textInput = document.createElement(\"input\");\r\n    textInput.setAttribute(\"type\", \"text\");\r\n    textInput.setAttribute(\"class\", \"todo-list-input form-control\");\r\n    textInput.setAttribute(\"placeholder\", \"New Task\");\r\n    textInput.setAttribute(\"id\", \"new-task-input\");\r\n  \r\n    // event listener for hitting 'Enter' instead of clicking button\r\n    textInput.addEventListener(\"keyup\", function (event) {\r\n      if (event.code === \"Enter\") {\r\n        submitInput(event);\r\n      }\r\n    });\r\n  \r\n  \r\n    // New Task Add Button\r\n    const addNewTaskButton = document.createElement(\"button\");\r\n    addNewTaskButton.setAttribute(\r\n      \"class\",\r\n      \"add btn btn-primary font-weight-bold todo-list-add-btn\"\r\n    );\r\n    addNewTaskButton.setAttribute(\"type\", \"submit\");\r\n    addNewTaskButton.setAttribute(\"id\", \"add-btn\");\r\n    addNewTaskButton.innerHTML = \"Add\";\r\n  \r\n  \r\n  \r\n    // Category Dropdown Button Creation\r\n    const dropdownDiv = document.createElement('div');\r\n    const dropdownButton = document.createElement('button');\r\n    dropdownButton.setAttribute('class', 'btn btn-outline-secondary dropdown-toggle category-dropdown');\r\n    dropdownButton.setAttribute('id', 'set-category-dropdown-btn')\r\n    dropdownButton.setAttribute('type', 'button');\r\n    dropdownButton.setAttribute('data-bs-toggle', 'dropdown');\r\n    dropdownButton.setAttribute('aria-expanded', 'false');\r\n    dropdownButton.innerHTML = 'Select Category';\r\n  \r\n  \r\n   \r\n    // Dropdown UL creation\r\n    const dropdownUL = document.createElement('ul');\r\n    dropdownUL.setAttribute('class', 'dropdown-menu dropdown-menu-end');\r\n    dropdownUL.setAttribute('id', 'dropdown-category-unordered-list')\r\n  \r\n    console.log(dropdownUL)\r\n  \r\n  \r\n  \r\n    // event listener for adding task by clicking add button\r\n      addNewTaskButton.addEventListener(\"click\", (event) => {\r\n        submitInput(event);\r\n      });\r\n  \r\n    dropdownDiv.appendChild(dropdownButton);\r\n    dropdownDiv.appendChild(dropdownUL);\r\n    \r\n  \r\n    // Appending items to create new task div\r\n  \r\n    inputGroup.appendChild(textInput);\r\n    inputGroup.appendChild(dropdownDiv)\r\n    topInputSectionDiv.appendChild(inputGroup);\r\n    topInputSectionDiv.appendChild(addNewTaskButton);\r\n  \r\n    renderCategorySelection()\r\n  }\r\n  \r\n  // rendering the Categories to the DOM\r\n  const renderCategorySelection = () =>{\r\n  \r\n  let dropdownUL = document.getElementById('dropdown-category-unordered-list');\r\n  let dropdownButton = document.getElementById('set-category-dropdown-btn');\r\n  \r\n  dropdownUL.innerHTML = ``;\r\n  console.log(dropdownUL)\r\n  \r\n  let currentCategories = updateCategories();\r\n  \r\n  currentCategories.forEach((category) => {\r\n      const listItem = document.createElement('li');\r\n      const listA = document.createElement('a');\r\n      listA.setAttribute('class', 'dropdown-item dropdown-categories')\r\n      listA.setAttribute('href', '#');\r\n      listA.innerHTML = `${category}`;\r\n  \r\n      listItem.appendChild(listA);\r\n      dropdownUL.appendChild(listItem);\r\n  \r\n      listA.addEventListener('click', () => {\r\n      dropdownButton.innerHTML = `${category}`  \r\n  \r\n      });\r\n  })\r\n  }\r\n  \r\n  \r\n  //adds a new task object to the array\r\n  function formatExistingJSON(task) {\r\n    const todo = {\r\n      id: task.id,\r\n      name: task.name,\r\n      category: task.category,\r\n      complete: false,\r\n    };\r\n  \r\n    //creating a new task to put into the HTML DOM\r\n    renderTask(todo);\r\n  }\r\n  \r\n  //Formats newly input ToDo\r\n  const formatNewJSON = (inputString, category) => {\r\n    console.log(\r\n      \"newly added task as a string before JSON format--->\",\r\n      inputString\r\n    );\r\n  \r\n    const todo = {\r\n      // use math.random & current array length to generate a new id number\r\n      id: todoArray.length + Math.floor(Math.random() * 258),\r\n      name: inputString,\r\n      category: category,\r\n      complete: false,\r\n    };\r\n  \r\n    //pushes existing to dos to Array with checked values\r\n    todoArray.push(todo);\r\n    console.log(\"array after new todo is pushed to array -->\", todoArray);\r\n  \r\n    //creating a new task to put into the HTML DOM\r\n    renderTask(todo);\r\n  };\r\n  \r\n  //turns input into text to be used to create a todo task\r\n  function submitInput(event) {\r\n    console.log('event---->', event);\r\n    event.preventDefault();\r\n    const input = document.querySelector(\".todo-list-input\");\r\n    const text = input.value.trim();\r\n    const findCategory = document.querySelector(\".category-dropdown\")\r\n    const category = findCategory.innerHTML;\r\n    let validCategory = category !== 'Select Category';\r\n    console.log('is valid category?', validCategory);\r\n    console.log('category text in submitInput----->', category);\r\n  \r\n    if (text !== \"\" && validCategory) {\r\n      formatNewJSON(text, category);\r\n      renderCategorySelection()\r\n      input.value = \"\";\r\n      input.focus();\r\n    } else {\r\n      promptError();\r\n    }\r\n  \r\n  }\r\n  \r\n  // Event listener from delete icon\r\n  function removeFromArray(key) {\r\n    console.log(\"remove from array---\");\r\n    event.currentTarget.parentElement.parentElement.remove(key);\r\n    todoArray.filter((item) => {\r\n      if (item.id === key) {\r\n        let indexOfTodo = todoArray.indexOf(item);\r\n        console.log(\"index of todo---->\", indexOfTodo);\r\n        todoArray.splice(indexOfTodo, 1);\r\n      }\r\n    });\r\n    console.log(\"todoArray--- .>\", todoArray);\r\n  }\r\n  \r\n  //removing tasks from either completed or incompleted list ( NOT THE SAME AS THE DELETE ICON FUNCTION)\r\n  function removeTodoFromList(key) {\r\n    event.currentTarget.parentElement.parentElement.parentElement.remove(key);\r\n  }\r\n  \r\n  //function to toggle between complete and incomplete tasks\r\n  function toggleComplete(key) {\r\n    const index = todoArray.find((item) => item.id == Number(key));\r\n  \r\n    if (index.complete == false) {\r\n      index.complete = true;\r\n    } else if (index.complete == true) {\r\n      index.complete = false;\r\n      renderTask(key);\r\n      removeTodoFromList(key);\r\n    }\r\n  \r\n    //finds the removed task from the todo Array from the key\r\n    findRemovedTask(key);\r\n    console.log(\"todo array after toggle--->\", todoArray);\r\n  }\r\n  \r\n  //Creating Task to add to the HTML DOM\r\n  function renderTask(todo) {\r\n    console.log(\"---renderTask----\");\r\n  \r\n    const incompleteList = document.querySelector(\"#incomplete-ul\");\r\n    const completeList = document.querySelector(\"#complete-ul\");\r\n    const item = document.querySelector(`[data-key='${todo.id}']`);\r\n  \r\n    const listItem = document.createElement(\"li\");\r\n    listItem.setAttribute(\"data-key\", todo.id);\r\n  \r\n    listItem.innerHTML = `\r\n      <div class=\"form-check\">\r\n      <label class=\"form-check-label\">\r\n      <input id=\"${todo.id}\" onClick=\"toggleComplete(${todo.id})\" class=\"js-tick checkbox\" type=\"checkbox\"/>\r\n      ${todo.name}\r\n      <p class=\"input-helper\" id=\"incomplete-list\">\r\n      </p>\r\n      </label>\r\n      </div>\r\n      <div class=\"editicons\">\r\n      <i onclick=\"editTodo(${todo.id})\" class=\" remove mdi mdi-close-circle-outline fas fa-edit customeditbutton\">\r\n      </i>\r\n      <i onclick=\"removeFromArray(${todo.id})\" class=\"remove mdi mdi-close-circle-outline\">\r\n      </i>\r\n      </div>\r\n    `;\r\n  \r\n    // This checks if the newly created To Do is complete or not, if complete, it will append the item to the complete list and it will be toggled green. If it is false, and is not complete, it will add the item to the incomplete to do list.\r\n    if (todo.complete) {\r\n      completeList.append(item);\r\n    } else if (todo.complete === false) {\r\n      //adds newly created task to incomplete ToDo List Card\r\n      incompleteList.append(listItem);\r\n    }\r\n    renderCategories()\r\n    \r\n  }\r\n  \r\n  //Error Checking for empty string\r\n  function promptError(removeUncategorized) {\r\n    if (removeUncategorized == 'Uncategorized'){\r\n      window.alert(\"You cannot erase this category. You can either update the category name with the edit icon or individually edit todos with a new Category.\")\r\n    } else {\r\n      window.alert(\"A To-Do item cannot be blank and a category must be selected. Please try again.\");\r\n    }\r\n  }\r\n  \r\n  function findRemovedTask(id) {\r\n    todoArray.forEach((element) => {\r\n      //once the element with the matching id is found in the array, the element is sent to be rendered in the DOM with createNewTask Function where the complete value in the object will be evaluated. If the task is complete it will be rendered in the completed DOM card. if the task is incomplete it will be rendered in the incomplete DOM card\r\n      if (element.id == id) {\r\n        renderTask(element);\r\n      }\r\n  \r\n    });\r\n  }\r\n  \r\n  // Remove all completed tasks\r\n  function deleteAllCompletedTasks() {\r\n    console.log(\"delete all completed---\");\r\n  \r\n    //targets the completedTasks Unordered List in the DOM & sets the HTML to nothing\r\n    let completedTasksUl = document.getElementById(\"complete-ul\");\r\n    completedTasksUl.innerHTML = \"\";\r\n    todoArray = todoArray.filter((item) => {\r\n      if (item.complete === false) {\r\n        return item;\r\n      }\r\n    });\r\n  \r\n    renderCategories();\r\n    renderCategorySelection();\r\n  }\r\n  \r\n  \r\n  //Edit tasks function that fires once the edit icon is clicked\r\n  function editTodo(id) {\r\n    const item = todoArray.find((item) => item.id == Number(id));\r\n    const name = JSON.stringify(item.name);\r\n    const oldElement = event.currentTarget.parentElement.parentElement;\r\n    oldElement.classList.add(\"mobile-sizing\");\r\n    const dataKey = oldElement.getAttribute(\"data-key\");\r\n    const inputField = event.currentTarget.parentElement.parentElement;\r\n  \r\n    //creating input field to edit todo and attaching an onclick event listener to the update button\r\n    inputField.innerHTML = `<input value=${name} id=${id}></input><button onclick= updateToDo(${id},${dataKey}) class=\\'mb-sm-btn btn btn-secondary btn-sm\\ '>Update</button>`;\r\n  }\r\n  \r\n  // this fires once the update button that appears in the edit todo feature is clicked\r\n  function updateToDo(id, dataKey) {\r\n    console.log(\"in update todo function\");\r\n  \r\n    //function to search for the old item by id.\r\n    const oldTodo = (item) => item.id === dataKey;\r\n    //the findIndex finds the index of the item matching the criteria in the oldTodo function\r\n    const indexOfOldTodo = todoArray.findIndex(oldTodo);\r\n  \r\n    //gets value of the edited to do string\r\n    let updatedTodoString = document.getElementById(`${id}`).value;\r\n  \r\n    //takes the value of the input string and formats it as a JSON object\r\n    if (updatedTodoString) {\r\n      formatNewJSON(updatedTodoString);\r\n      todoArray.splice(indexOfOldTodo, 1);\r\n      //removes the edit todo input field after the update button has been clicked\r\n      removeEditInputField(id);\r\n    } else {\r\n      //error if input is empty\r\n      promptError();\r\n    }\r\n    console.log(\"updated array after edited todo is edited -->\", todoArray);\r\n  }\r\n  \r\n  //remove the input field from the DOM\r\n  function removeEditInputField(inputID) {\r\n    document.getElementById(inputID).parentElement.remove();\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  const renderCategories = () => {\r\n      \r\n      // calls function updateCategories --> which loops over todoArray and pulls out the category key:value and pushes the categories to an array it then converts to a set to get rid of duplicate Items and then back to an array and returns an array of category names from the todoArray with no duplicates. It's then stored in the categories array so we can access it in this function.\r\n  \r\n      let categories = updateCategories();\r\n      \r\n      //Modal \r\n      let modalBody = document.getElementById('modal-body');\r\n      \r\n      if (categories.length == 1 && categories[0] == 'Uncategorized'){\r\n        categories = [];\r\n      }\r\n  \r\n      //Dropdown Unordered List\r\n      let dropDown = document.getElementById('defaultDropdown');\r\n  \r\n      //Clearing DOM of previous rendered Lists\r\n      modalBody.innerHTML = '';\r\n  \r\n  \r\n      let allCatString = 'All Categories'\r\n      //Clearing DOM of previous rendered Lists but leaving All categories as a base case\r\n      dropDown.innerHTML = `<option value=${allCatString}> <p> ${allCatString} </p> </option><hr>`;\r\n  \r\n  \r\n      // Maggie- Make \"+ New Category\" button a constant in Modal\r\n      let newCatBtnDiv = document.createElement('div');\r\n      newCatBtnDiv.setAttribute(\"class\", \"modal-new-categories-div\")\r\n  \r\n      let newCatOptionBtn = document.createElement(\"button\");\r\n      newCatOptionBtn.innerText = \"+ New Category\";\r\n      newCatOptionBtn.setAttribute(\"class\", \"btn-sm btn-primary\");\r\n      newCatOptionBtn.addEventListener(\"click\", addCategories);\r\n      modalBody.appendChild(newCatBtnDiv);\r\n      newCatBtnDiv.appendChild(newCatOptionBtn);\r\n  \r\n  \r\n      //Modal & Dropdown Categories Rendering\r\n     categories.forEach(item => {\r\n  \r\n          //creating list item, edit & delete icons & attaching them to the modal\r\n          let categoryListElement = document.createElement(\"li\");\r\n          categoryListElement.classList.add('modal-displayed-categories')\r\n          let text = document.createTextNode(item);\r\n          let buttonDiv = document.createElement('div');\r\n          buttonDiv.classList.add('edit-icons-div')\r\n          let paragraphElement = document.createElement('p');\r\n          paragraphElement.classList.add('category-list-text-modal')\r\n          paragraphElement.textContent = text.textContent;\r\n          categoryListElement.appendChild(paragraphElement);\r\n          categoryListElement.appendChild(buttonDiv);\r\n          modalBody.appendChild(categoryListElement)\r\n  \r\n          //This is where the icon elements for edit and delete will need to be created and appended to the buttonDiv\r\n          let editIcon = document.createElement('i');\r\n          editIcon.classList.add('remove', 'mdi', 'mdi-close-circle-outline', 'fas', 'fa-edit', 'customeditbutton', 'modal-edit-icon')\r\n          buttonDiv.appendChild(editIcon)\r\n  \r\n          let removeIcon = document.createElement('i');\r\n          removeIcon.classList.add('remove', 'mdi', 'mdi-close-circle-outline', 'modal-remove-icon');\r\n          removeIcon.setAttribute('value', text)\r\n          removeIcon.addEventListener('click', removeCategory)\r\n          buttonDiv.appendChild(removeIcon);\r\n  \r\n          //Updating Dropdown Menu UL\r\n          let dropdownListElement = document.createElement(\"option\");\r\n          dropdownListElement.setAttribute('value', text.textContent )\r\n          dropdownListElement.appendChild(text);\r\n          dropDown.appendChild(dropdownListElement);\r\n  \r\n    });\r\n      //This code displays a message if all categories have been deleted (Uncategorized is automatically deleted if no other categories remain. I did this because it made no sense to have all items be uncategorized in the sort by drop down. If I left uncategorized in the drop down the toggle would show all elements for the (all categories option) and it would also show all elements for the (uncategorized option). And for the user it would appear that the sort by filter didn't do anything when toggling between those two options\r\n  \r\n      //This code creates a message in the modal that encourages the user to add more categories if there are none left to display.\r\n      if (categories.length === 0) {\r\n        modalBody.innerHTML = '';\r\n        let h5 = document.createElement('h5');\r\n        h5.innerText = 'All Categories have been set to Uncategorized'\r\n        let h6 = document.createElement('h6');\r\n        h6.setAttribute('class', 'empty-modal-text')\r\n        h6.innerText = 'Please add categories to improve our sorting feature.'\r\n        h5.setAttribute('class', 'empty-modal-text');\r\n        let emptyModalDiv = document.createElement('div');\r\n        emptyModalDiv.setAttribute('class', 'empty-modal')\r\n        emptyModalDiv.appendChild(h5);\r\n        emptyModalDiv.appendChild(h6)\r\n  \r\n        //Add New Category Button\r\n        let newCatBtn = document.createElement('button');\r\n        newCatBtn.innerText = \"+ Add Category\";\r\n        newCatBtn.setAttribute('class', 'btn-sm btn-primary');\r\n        newCatBtn.addEventListener('click', addCategories)\r\n  \r\n        //Appending Elements to the Modal\r\n        emptyModalDiv.appendChild(newCatBtn);\r\n        modalBody.appendChild(emptyModalDiv);\r\n        \r\n      }\r\n  \r\n      // Save button\r\n      const saveAndClose = () => {\r\n        renderCategorySelection()\r\n      }\r\n      const saveBtn = document.getElementById('save-btn'); \r\n      saveBtn.addEventListener('click', saveAndClose);\r\n  }\r\n  \r\n  //Sort By Function that is triggered when the dropdown options are selected. It displays the to dos with the matched category\r\n  function filterByCategory(event) {\r\n      console.log('Selected Dropdown Item -->',event.target.value);\r\n      let filterCategory = event.target.value;\r\n      let prefilteredTodos = document.getElementById('incomplete-ul');\r\n  \r\n      if (filterCategory === 'All'){\r\n        prefilteredTodos.innerHTML = '';\r\n        todoArray.map((task) => {\r\n          formatExistingJSON(task);\r\n        });\r\n      } else {\r\n      let filteredCategories = todoArray.filter(item => (item.category === filterCategory))\r\n      prefilteredTodos.innerHTML = '';\r\n      filteredCategories.forEach(item => {renderTask(item)});\r\n      }\r\n    }\r\n  \r\n  //Event listener for removing a Category on the delete icon in the Category Modal\r\n  const removeCategory = (event) => {\r\n    let removedCatName = event.target.parentElement.parentElement.textContent;\r\n    \r\n    todoArray.forEach(item => {\r\n      if (item.category === removedCatName) item.category = 'Uncategorized';\r\n    })\r\n    \r\n  \r\n    if (removedCatName === 'Uncategorized') {\r\n      promptError(removedCatName);\r\n    } else {\r\n      let categories = updateCategories();\r\n      let index = categories.indexOf(removedCatName);\r\n      categories.splice(index, 1);\r\n      let categoryDiv = document.getElementById('modal-body');\r\n      categoryDiv.innerHTML = '';\r\n      renderCategories();\r\n    }\r\n  };\r\n  \r\n  //Event Listener function for adding New Categories.\r\n  const addCategories = (event) => {\r\n    console.log(event.target.parentElement)\r\n    \r\n    let addCategoryHTML = event.target.parentElement;\r\n    let ModalDiv = addCategoryHTML;\r\n  \r\n    let divElement = document.createElement('div');\r\n    let inputElement = document.createElement('input');\r\n    inputElement.setAttribute('id', 'new-cat-input')\r\n    inputElement.setAttribute('type', 'text');\r\n    divElement.appendChild(inputElement);\r\n  \r\n    let submitCategoryBtn = document.createElement('button');\r\n    submitCategoryBtn.innerText = 'Create Category';\r\n    submitCategoryBtn.setAttribute('class', 'input-field-btn btn btn-sm btn-outline-primary')\r\n    divElement.appendChild(submitCategoryBtn);\r\n    divElement.setAttribute('class', 'even-with-btn')\r\n    addCategoryHTML.innerHTML = '';\r\n    addCategoryHTML.appendChild(divElement);\r\n    \r\n    inputElement.addEventListener('change', function(event) {getValue(event)})\r\n    \r\n    const getValue = (event) => {\r\n      /* console.log(event.target.parentElement.childNode) */\r\n      let nciValue = document.getElementById('new-cat-input').value;\r\n      catArray.push(document.getElementById('new-cat-input').value);\r\n      console.log(nciValue);\r\n      renderCategories();\r\n    }\r\n  \r\n      // Maggie create remove/cancel icon for create new category button input\r\n      let removeIcon = document.createElement(\"i\");\r\n      removeIcon.setAttribute(\r\n        \"class\",\r\n        \".remove mdi mdi-close-circle-outline modal-remove-icon\"\r\n      );\r\n    \r\n      removeIcon.addEventListener(\"click\", removeCategory);\r\n      ModalDiv.appendChild(removeIcon);\r\n    \r\n  }\r\n  \r\n  //Dropdown Options Event Listener\r\n  let dropdownOptions = document.getElementById('defaultDropdown');\r\n  dropdownOptions.addEventListener('change', filterByCategory)\r\n  \r\n  \r\n  //Edit Categories (Opens Modal) Button\r\n  let editCatBtn = document.getElementById('edit-categories-btn');\r\n  editCatBtn.addEventListener('click', renderCategories());\r\n  \r\n  //Category Dropdown Button \r\n  let catDropdown = document.getElementById('defaultDropdown');\r\n  catDropdown.addEventListener('click', renderCategories());"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}